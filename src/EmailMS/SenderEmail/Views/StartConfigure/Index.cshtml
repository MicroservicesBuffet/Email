@model ConfigureMS.SHIM_StartConfigurationMS

@{
    Model.ChoosenMainProvider ??= "";
    var provData = Model.ChoosenProviderData;
    ViewData["Title"] = "Customize";
    bool wasConfigured = Model.IsConfigured();
    SelectListItem[] Mainproviders = new SelectListItem[0];
    if (Model.MainProviders?.Length > 0)
    {
        var nr = Model.MainProviders.Length;
        Mainproviders = new SelectListItem[nr + 1];
        for (int i = 0; i < nr; i++)
        {
            var str = Model.MainProviders[i];
            Mainproviders[i] = new SelectListItem(str, str);

        }
        Mainproviders[nr] = new SelectListItem("Providers List", "");
    }
}
<style>
    .field-validation-error {
        color: red
    }

    .validation-summary-errors {
        color: red
    }
</style>

<div class="text-center">
    <h1 class="display-4">Start Customizing @Model.Name</h1>
</div>

@if (wasConfigured)
{
    <text>
        Last Configuration: @Model.ConfiguredAt
    </text>
}
<form asp-controller="StartConfigure" asp-action="SaveProvider" method="post">
    <div asp-validation-summary="All"></div>

    Found @Model?.MainProviders?.Length  Providers in the folder @Model.BaseFolder
    <br />
    <select asp-for="ChoosenMainProvider" asp-items="Mainproviders"></select>

    <input type="submit" value="Choose Provider" />

</form>
<br />
@if (!string.IsNullOrWhiteSpace(Model.ChoosenMainProvider))
{
    if (provData != null)
    {
        var write = provData.WriteProperties();
        @foreach (var item in provData.ReadProperties())
        {
            var key = item.Key;
            if (!write.ContainsKey(key))
            {
                <p>
                    @item.Key : @item.Value
                </p>

            }

        }
        <br />
        <form asp-controller="StartConfigure" asp-action="Test" method="post">

            @{
                int nr = -1;
                foreach (var item in write)
                {
                    nr++;

                    <label>@item.Key</label>
                    <input type="hidden" name="myValues[@nr].Key" value="@item.Key" />
                    <input name="myValues[@nr].Value" value="@item.Value" />
                    <br />

                }
            }
            <input type="submit" value="Test @Model.ChoosenMainProvider" />

        </form>
    }

}

<div>
    <a asp-action="Index" asp-route-startover="true"> >Configure again</a>
</div>


